---
- name: Ensure fontconfig & unzip is installed
  become: true
  package:
    name:
      - fontconfig
      - unzip
    state: present

- name: Create temporary download directory
  file:
    path: "{{ temp_base_dir }}"
    state: directory
    mode: '0755'

- name: Check if fonts are already installed
  stat:
    path: "{{ item.dir }}"
  register: fonts_installed
  loop: "{{ fonts }}"
  loop_control:
    label: "{{ item.name }}"

- name: Create system font directories
  become: true
  file:
    path: "{{ item.item.dir }}"
    state: directory
    mode: '0755'
  when: not item.stat.exists
  loop: "{{ fonts_installed.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Download font packages
  get_url:
    url: "{{ item.item.url }}"
    dest: "{{ temp_base_dir }}/{{ item.item.name }}.zip"
    mode: '0644'
    timeout: 30
  when: not item.stat.exists
  loop: "{{ fonts_installed.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Extract font files
  become: true
  unarchive:
    src: "{{ temp_base_dir }}/{{ item.item.name }}.zip"
    dest: "{{ item.item.dir }}"
    remote_src: yes
    include: "*.ttf"
    extra_opts: ["-j"]
  when: not item.stat.exists
  loop: "{{ fonts_installed.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: Update font cache
  become: true
  command: fc-cache -f -v
  when: fonts_installed.results | selectattr('stat.exists', 'equalto', false) | list | length > 0
  changed_when: true

- name: Clean up temporary files
  file:
    path: "{{ temp_base_dir }}"
    state: absent
